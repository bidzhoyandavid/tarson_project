# Generated by Django 4.1.7 on 2023-04-11 07:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Company",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                ("symbol", models.CharField(max_length=30, verbose_name="symbol")),
                ("status", models.CharField(max_length=10, verbose_name="status")),
                ("easy_to_borrow", models.BooleanField(verbose_name="easy_to_borrow")),
                ("exchange", models.CharField(max_length=10, verbose_name="exchange")),
                ("fractionable", models.BooleanField(verbose_name="fractionable")),
                ("uuid", models.UUIDField(editable=False, verbose_name="uuid")),
                (
                    "maintenance_margin_requirement",
                    models.FloatField(verbose_name="maintanance"),
                ),
                ("marginable", models.BooleanField(verbose_name="marginable")),
                ("min_size_order", models.FloatField(verbose_name="min_size_order")),
                (
                    "min_trade_increment",
                    models.FloatField(verbose_name="min_trade_increment"),
                ),
                ("price_increment", models.FloatField(verbose_name="price_increment")),
                ("shortable", models.BooleanField(verbose_name="shortable")),
                ("tradable", models.BooleanField(verbose_name="tradable")),
                ("cik", models.CharField(max_length=20, verbose_name="cik")),
                ("sector", models.CharField(max_length=100, verbose_name="sector")),
                ("industry", models.CharField(max_length=100, verbose_name="industry")),
                (
                    "date_upload",
                    models.DateField(auto_now_add=True, verbose_name="date_upload"),
                ),
                (
                    "date_update",
                    models.DateField(auto_now=True, verbose_name="date_update"),
                ),
            ],
            options={
                "verbose_name": "StockCompany",
                "verbose_name_plural": "StockCompanies",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="CompanyCommon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fiscal_date", models.DateField(verbose_name="fiscal_date")),
                ("currency", models.CharField(max_length=10, verbose_name="currency")),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="investment.company",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CompanyBalanceSheet",
            fields=[
                (
                    "companycommon_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="investment.companycommon",
                    ),
                ),
                ("total_assets", models.BigIntegerField(verbose_name="total_assets")),
                (
                    "total_current_assets",
                    models.BigIntegerField(verbose_name="total_current_assets"),
                ),
                (
                    "cash_and_equiv",
                    models.BigIntegerField(verbose_name="cash_and_equiv"),
                ),
                (
                    "cash_and_shortinvestment",
                    models.BigIntegerField(verbose_name="cash_and_shortinvestment"),
                ),
                ("inventory", models.BigIntegerField(verbose_name="inventory")),
                (
                    "current_net_recievables",
                    models.BigIntegerField(verbose_name="current_net_recievables"),
                ),
                (
                    "total_non_current_assets",
                    models.BigIntegerField(verbose_name="total_noncurrent_assets"),
                ),
                (
                    "proprety_plan_equipment",
                    models.BigIntegerField(verbose_name="property_plan_equipment"),
                ),
                (
                    "accumulated_deprec_amort",
                    models.BigIntegerField(verbose_name="accumulated_deprec_amort"),
                ),
                (
                    "intagible_assets",
                    models.BigIntegerField(verbose_name="intangible_assets"),
                ),
                (
                    "intagible_assets_exc_goodwill",
                    models.BigIntegerField(
                        verbose_name="intangible_assets_exc_goodwill"
                    ),
                ),
                ("goodwill", models.BigIntegerField(verbose_name="goodwill")),
                ("investments", models.BigIntegerField(verbose_name="investments")),
                (
                    "long_term_investment",
                    models.BigIntegerField(verbose_name="long_term_investment"),
                ),
                (
                    "short_term_investment",
                    models.BigIntegerField(verbose_name="short_term_investment"),
                ),
                (
                    "other_current_assets",
                    models.BigIntegerField(verbose_name="other_current_assets"),
                ),
                (
                    "other_noncurrent_assets",
                    models.BigIntegerField(verbose_name="other_noncurrent_assets"),
                ),
                (
                    "total_liabilities",
                    models.BigIntegerField(verbose_name="total_liabilities"),
                ),
                (
                    "total_current_liabilities",
                    models.BigIntegerField(verbose_name="total_current_liabilities"),
                ),
                (
                    "current_accounts_payable",
                    models.BigIntegerField(verbose_name="current_accounts_payable"),
                ),
                (
                    "deferred_revenue",
                    models.BigIntegerField(verbose_name="deferred_revenue"),
                ),
                ("current_debt", models.BigIntegerField(verbose_name="current_debt")),
                (
                    "short_term_debt",
                    models.BigIntegerField(verbose_name="short_term_debt"),
                ),
                (
                    "total_noncurrent_liab",
                    models.BigIntegerField(verbose_name="total_noncurrent_liab"),
                ),
                (
                    "capital_lease_obligations",
                    models.BigIntegerField(verbose_name="capital_lease_obligations"),
                ),
                (
                    "long_term_debt",
                    models.BigIntegerField(verbose_name="long_term_debt"),
                ),
                (
                    "current_long_term_debt",
                    models.BigIntegerField(verbose_name="current_long_term_debt"),
                ),
                (
                    "long_term_noncurrent",
                    models.BigIntegerField(verbose_name="long_term_noncurrent"),
                ),
                (
                    "short_long_term_debt_total",
                    models.BigIntegerField(verbose_name="short_long_term_debt_total"),
                ),
                (
                    "other_current_liab",
                    models.BigIntegerField(verbose_name="other_current_liab"),
                ),
                (
                    "other_noncurrent_liab",
                    models.BigIntegerField(verbose_name="other_noncurrent_liab"),
                ),
                (
                    "total_shareholder_equity",
                    models.BigIntegerField(verbose_name="totak_shareholder_equity"),
                ),
                (
                    "treasury_stock",
                    models.BigIntegerField(verbose_name="treasury_stock"),
                ),
                (
                    "retained_earnings",
                    models.BigIntegerField(verbose_name="retained_earnings"),
                ),
                ("common_stock", models.BigIntegerField(verbose_name="common_stock")),
                (
                    "common_stock_shares_outstand",
                    models.BigIntegerField(verbose_name="common_stock_shares_outstan"),
                ),
            ],
            options={
                "verbose_name": "Company Balance Sheet",
                "verbose_name_plural": "Companies Balance Sheets",
                "ordering": ["company", "fiscal_date"],
            },
            bases=("investment.companycommon",),
        ),
        migrations.CreateModel(
            name="CompanyCashFlow",
            fields=[
                (
                    "companycommon_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="investment.companycommon",
                    ),
                ),
                (
                    "operating_cashflow",
                    models.BigIntegerField(verbose_name="operating_cashflow"),
                ),
                (
                    "payment_from_oper_activities",
                    models.BigIntegerField(verbose_name="payment_from_oper_activities"),
                ),
                (
                    "proceeds_from_oper_activities",
                    models.BigIntegerField(
                        verbose_name="proceeds_from_oper_activities"
                    ),
                ),
                (
                    "change_in_oper_liab",
                    models.BigIntegerField(verbose_name="change_in_oper_liab"),
                ),
                (
                    "change_in_oper_assets",
                    models.BigIntegerField(verbose_name="change_in_oper_assets"),
                ),
                (
                    "deprec_depletion_amort",
                    models.BigIntegerField(verbose_name="deprec_deplet_amort"),
                ),
                (
                    "capital_expenditures",
                    models.BigIntegerField(verbose_name="capital_expenditures"),
                ),
                (
                    "change_in_recievables",
                    models.BigIntegerField(verbose_name="change_in_recievables"),
                ),
                (
                    "change_in_inventory",
                    models.BigIntegerField(verbose_name="change_in_inventory"),
                ),
                ("profit_loss", models.BigIntegerField(verbose_name="profit_loss")),
                (
                    "cashflow_from_investment",
                    models.BigIntegerField(verbose_name="cashflow_from_investment"),
                ),
                (
                    "cashflow_from_financing",
                    models.BigIntegerField(verbose_name="cashflow_from_financing"),
                ),
                (
                    "proceeds_from_repayment_of_short_term_debt",
                    models.BigIntegerField(
                        verbose_name="proceeds_from_repayment_of_short_term_debt"
                    ),
                ),
                (
                    "payments_for_repurchase_of_common_stocks",
                    models.BigIntegerField(
                        verbose_name="paymenys_for_repayment_of_repurchase_common_stocks"
                    ),
                ),
                (
                    "payment_for_repurchase_of_equity",
                    models.BigIntegerField(
                        verbose_name="payment_for_repurchase_equity"
                    ),
                ),
                (
                    "payment_for_repurchase_of_preferred_stock",
                    models.BigIntegerField(
                        verbose_name="payment_for_repurchase_of_preferred_stock"
                    ),
                ),
                (
                    "dividend_payout",
                    models.BigIntegerField(verbose_name="dividend_payout"),
                ),
                (
                    "dividend_payout_common_stock",
                    models.BigIntegerField(verbose_name="dividend_payout_common_stock"),
                ),
                (
                    "dividend_payout_preferred_stock",
                    models.BigIntegerField(
                        verbose_name="dividend_payout_preferred_stock"
                    ),
                ),
                (
                    "proceeds_from_issuance_of_common_stocks",
                    models.BigIntegerField(
                        verbose_name="proceeds_from_issuance_of_common_stocks"
                    ),
                ),
                (
                    "proceeds_from_issuance_of_long_term_debt",
                    models.BigIntegerField(
                        verbose_name="proceeds_from_issuance_of_long_term_debt"
                    ),
                ),
                (
                    "proceeds_from_issuance_of_preferres_stocks",
                    models.BigIntegerField(
                        verbose_name="proceeds_from_issuance_of_preferred_stocks"
                    ),
                ),
                (
                    "proceeds_from_repurchase_of_equity",
                    models.BigIntegerField(
                        verbose_name="proceeds_of_repurchase_equity"
                    ),
                ),
                (
                    "proceeds_from_sale_of_treasury_stock",
                    models.BigIntegerField(
                        verbose_name="proceeds_from_sale_of_treasury_stock"
                    ),
                ),
                (
                    "change_in_cash_and_equiv",
                    models.BigIntegerField(verbose_name="change_in_cash_and_equiv"),
                ),
                (
                    "change_in_exchange_rate",
                    models.BigIntegerField(verbose_name="change_in_exchange_rate"),
                ),
                ("net_income", models.BigIntegerField(verbose_name="net_income")),
            ],
            options={
                "verbose_name": "Company Cash Flow",
                "verbose_name_plural": "Companys' Cash Flow",
                "ordering": ["company", "fiscal_date"],
            },
            bases=("investment.companycommon",),
        ),
        migrations.CreateModel(
            name="CompanyIncomeStatement",
            fields=[
                (
                    "companycommon_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="investment.companycommon",
                    ),
                ),
                ("gross_profit", models.BigIntegerField(verbose_name="gross_profit")),
                ("total_revenue", models.BigIntegerField(verbose_name="total_revenue")),
                (
                    "cost_of_revenue",
                    models.BigIntegerField(verbose_name="cost_of_revenue"),
                ),
                (
                    "cost_of_goos_sold",
                    models.BigIntegerField(verbose_name="cost_of_goods_sold"),
                ),
                (
                    "operating_income",
                    models.BigIntegerField(verbose_name="operating_income"),
                ),
                (
                    "selling_general_and_admin",
                    models.BigIntegerField(verbose_name="selling_general_and_admin"),
                ),
                ("rnd", models.BigIntegerField(verbose_name="rnd")),
                (
                    "operating_expenses",
                    models.BigIntegerField(verbose_name="operating_expenses"),
                ),
                (
                    "investment_income_net",
                    models.BigIntegerField(verbose_name="investment_income_net"),
                ),
                (
                    "net_interest_income",
                    models.BigIntegerField(verbose_name="net interest income"),
                ),
                (
                    "interest_income",
                    models.BigIntegerField(verbose_name="interest_income"),
                ),
                (
                    "interest_expense",
                    models.BigIntegerField(verbose_name="interest_expense"),
                ),
                (
                    "non_interest_income",
                    models.BigIntegerField(verbose_name="non_interest_income"),
                ),
                (
                    "other_nonoper_income",
                    models.BigIntegerField(verbose_name="other_nonoper_income"),
                ),
                ("depreciation", models.BigIntegerField(verbose_name="depreciation")),
                (
                    "depreciation_and_amortization",
                    models.BigIntegerField(
                        verbose_name="depreciation_and_amortization"
                    ),
                ),
                (
                    "income_before_tax",
                    models.BigIntegerField(verbose_name="income_before_tax"),
                ),
                (
                    "income_tax_expense",
                    models.BigIntegerField(verbose_name="income_tax_expense"),
                ),
                (
                    "interest_debt_expense",
                    models.BigIntegerField(verbose_name="interest_debt_expense"),
                ),
                (
                    "net_income_from_contin_operations",
                    models.BigIntegerField(
                        verbose_name="net_income_from_contin_operations"
                    ),
                ),
                (
                    "comprehensive_income_net_of_tax",
                    models.BigIntegerField(
                        verbose_name="comprehensive_income_net_of_tax"
                    ),
                ),
                ("ebit", models.BigIntegerField(verbose_name="ebit")),
                ("ebitda", models.BigIntegerField(verbose_name="ebitda")),
                ("net_income", models.BigIntegerField(verbose_name="net_income")),
            ],
            options={
                "verbose_name": "Company Income Statement",
                "verbose_name_plural": "Companies Income Statement",
                "ordering": ["company", "fiscal_date"],
            },
            bases=("investment.companycommon",),
        ),
        migrations.CreateModel(
            name="StockRisk",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_at", models.DateField(verbose_name="date_at")),
                ("historical_var", models.FloatField(verbose_name="historical_var")),
                ("ewma_var", models.FloatField(verbose_name="ewma_var")),
                ("parametric_var", models.FloatField(verbose_name="parametric_var")),
                ("sharp_ratio", models.FloatField(verbose_name="sharp_ratio")),
                ("sortino_ratio", models.FloatField(verbose_name="sortino_ratio")),
                ("traynor_ratio", models.FloatField(verbose_name="trainor_ratio")),
                (
                    "stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="investment.company",
                    ),
                ),
            ],
            options={
                "verbose_name": "Stock Risk",
                "verbose_name_plural": "Stocks Risks",
                "ordering": ["stock", "date_at"],
            },
        ),
        migrations.CreateModel(
            name="StockPrices",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_at", models.DateField(verbose_name="date")),
                ("open", models.FloatField(verbose_name="open")),
                ("high", models.FloatField(verbose_name="high")),
                ("low", models.FloatField(verbose_name="low")),
                ("close", models.FloatField(verbose_name="close")),
                ("volume", models.BigIntegerField(verbose_name="volume")),
                ("trade_count", models.BigIntegerField(verbose_name="trade_count")),
                ("vwap", models.FloatField(verbose_name="vwap")),
                (
                    "stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="investment.company",
                    ),
                ),
            ],
            options={
                "verbose_name": "StockPrices",
                "verbose_name_plural": "StockPrices",
                "ordering": ["stock", "date_at"],
            },
        ),
        migrations.CreateModel(
            name="CompanyFinRatios",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_at", models.DateField(verbose_name="date_at")),
                ("market_cap", models.BigIntegerField(verbose_name="market_cap")),
                ("ebitda", models.BigIntegerField(verbose_name="ebitda")),
                ("pe_ratio", models.FloatField(verbose_name="pe_ratio")),
                ("peg_ratio", models.FloatField(verbose_name="peg_ratio")),
                ("book_value", models.FloatField(verbose_name="book_value")),
                (
                    "dividend_per_share",
                    models.FloatField(verbose_name="dividend_per_share"),
                ),
                ("dividend_yield", models.FloatField(verbose_name="dividend_yield")),
                ("eps", models.FloatField(verbose_name="eps")),
                (
                    "revenue_per_share",
                    models.FloatField(verbose_name="revenue_per_share"),
                ),
                (
                    "profit_margin_ttm",
                    models.FloatField(verbose_name="profit_margin_ttm"),
                ),
                (
                    "operating_margin_ttm",
                    models.FloatField(verbose_name="operating_margin_ttm"),
                ),
                ("roa_ttm", models.FloatField(verbose_name="roa_ttm")),
                ("roe_ttm", models.FloatField(verbose_name="roe_ttm")),
                ("revenue_ttm", models.BigIntegerField(verbose_name="revenue_ttm")),
                (
                    "gross_profit_ttm",
                    models.BigIntegerField(verbose_name="gross_profit_ttm"),
                ),
                ("diluted_eps_ttm", models.FloatField(verbose_name="diluted_eps_ttm")),
                ("trailing_pe", models.FloatField(verbose_name="trailing_pe")),
                ("forward_pe", models.FloatField(verbose_name="forward_pe")),
                (
                    "price2sales_ratio",
                    models.FloatField(verbose_name="price2sales_ratio"),
                ),
                (
                    "price2book_ratio",
                    models.FloatField(verbose_name="price2book_ratio"),
                ),
                ("ev2revenue", models.FloatField(verbose_name="ev2revenue")),
                ("ev2ebitda", models.FloatField(verbose_name="ev2ebitda")),
                ("beta", models.FloatField(verbose_name="beta")),
                (
                    "shares_outstanding",
                    models.BigIntegerField(verbose_name="shares_outstanding"),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="investment.company",
                    ),
                ),
            ],
            options={
                "verbose_name": "Company Financial Report",
                "verbose_name_plural": "Companies Financail Reports",
                "ordering": ["company", "date_at"],
            },
        ),
    ]
